
Week5-1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001ac  08000198  08000198  00001198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000344  0800034c  0000134c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000344  08000344  0000134c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000344  08000344  0000134c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000344  0800034c  0000134c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000344  08000344  00001344  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000348  08000348  00001348  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  0000134c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800034c  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800034c  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000134c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000045d  00000000  00000000  0000137c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000001e0  00000000  00000000  000017d9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000068  00000000  00000000  000019c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000003f  00000000  00000000  00001a28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000dd60  00000000  00000000  00001a67  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000aae  00000000  00000000  0000f7c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004fe6e  00000000  00000000  00010275  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000600e3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000090  00000000  00000000  00060128  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000045  00000000  00000000  000601b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	@ (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	@ (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	0800032c 	.word	0x0800032c

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	@ (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	@ (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	@ (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	0800032c 	.word	0x0800032c

080001d8 <main>:
 */

#include "stm32f4xx.h"
#include "systick_config.h"

int main(void){
 80001d8:	b580      	push	{r7, lr}
 80001da:	af00      	add	r7, sp, #0

	// Enable clock to GPIOA
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 80001dc:	4b0e      	ldr	r3, [pc, #56]	@ (8000218 <main+0x40>)
 80001de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001e0:	4a0d      	ldr	r2, [pc, #52]	@ (8000218 <main+0x40>)
 80001e2:	f043 0301 	orr.w	r3, r3, #1
 80001e6:	6313      	str	r3, [r2, #48]	@ 0x30

	// Set GPIOA PIN 5 as output
	GPIOA->MODER &= ~(GPIO_MODER_MODER5_Msk);
 80001e8:	4b0c      	ldr	r3, [pc, #48]	@ (800021c <main+0x44>)
 80001ea:	681b      	ldr	r3, [r3, #0]
 80001ec:	4a0b      	ldr	r2, [pc, #44]	@ (800021c <main+0x44>)
 80001ee:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 80001f2:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= GPIO_MODER_MODER5_0;
 80001f4:	4b09      	ldr	r3, [pc, #36]	@ (800021c <main+0x44>)
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	4a08      	ldr	r2, [pc, #32]	@ (800021c <main+0x44>)
 80001fa:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80001fe:	6013      	str	r3, [r2, #0]

	//Infinite loop
	while(1){
		GPIOA->ODR ^= GPIO_ODR_OD5; // Toggles the LED
 8000200:	4b06      	ldr	r3, [pc, #24]	@ (800021c <main+0x44>)
 8000202:	695b      	ldr	r3, [r3, #20]
 8000204:	4a05      	ldr	r2, [pc, #20]	@ (800021c <main+0x44>)
 8000206:	f083 0320 	eor.w	r3, r3, #32
 800020a:	6153      	str	r3, [r2, #20]
		delayMs(1000);
 800020c:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8000210:	f000 f806 	bl	8000220 <delayMs>
	while(1){
 8000214:	bf00      	nop
 8000216:	e7f3      	b.n	8000200 <main+0x28>
 8000218:	40023800 	.word	0x40023800
 800021c:	40020000 	.word	0x40020000

08000220 <delayMs>:
#include "systick_config.h"

#define SYSTICK_LOAD_VALUE 16000-1 //in a ms

void delayMs(int timeMs){
 8000220:	b480      	push	{r7}
 8000222:	b085      	sub	sp, #20
 8000224:	af00      	add	r7, sp, #0
 8000226:	6078      	str	r0, [r7, #4]
	//Reload with number of clocks per millisecond
	SysTick->LOAD |= SYSTICK_LOAD_VALUE;
 8000228:	4b18      	ldr	r3, [pc, #96]	@ (800028c <delayMs+0x6c>)
 800022a:	685b      	ldr	r3, [r3, #4]
 800022c:	4a17      	ldr	r2, [pc, #92]	@ (800028c <delayMs+0x6c>)
 800022e:	f443 5379 	orr.w	r3, r3, #15936	@ 0x3e40
 8000232:	f043 033f 	orr.w	r3, r3, #63	@ 0x3f
 8000236:	6053      	str	r3, [r2, #4]
	//Clear sysTick current value register
	SysTick->VAL = 0;
 8000238:	4b14      	ldr	r3, [pc, #80]	@ (800028c <delayMs+0x6c>)
 800023a:	2200      	movs	r2, #0
 800023c:	609a      	str	r2, [r3, #8]
	//ENable Timer SysTick
	SysTick->CTRL |= (1 << SysTick_CTRL_CLKSOURCE_Pos);
 800023e:	4b13      	ldr	r3, [pc, #76]	@ (800028c <delayMs+0x6c>)
 8000240:	681b      	ldr	r3, [r3, #0]
 8000242:	4a12      	ldr	r2, [pc, #72]	@ (800028c <delayMs+0x6c>)
 8000244:	f043 0304 	orr.w	r3, r3, #4
 8000248:	6013      	str	r3, [r2, #0]
	SysTick->CTRL |= (1 << SysTick_CTRL_ENABLE_Pos);
 800024a:	4b10      	ldr	r3, [pc, #64]	@ (800028c <delayMs+0x6c>)
 800024c:	681b      	ldr	r3, [r3, #0]
 800024e:	4a0f      	ldr	r2, [pc, #60]	@ (800028c <delayMs+0x6c>)
 8000250:	f043 0301 	orr.w	r3, r3, #1
 8000254:	6013      	str	r3, [r2, #0]

	for(int i=0; i<timeMs;i++){
 8000256:	2300      	movs	r3, #0
 8000258:	60fb      	str	r3, [r7, #12]
 800025a:	e009      	b.n	8000270 <delayMs+0x50>
		//Wait until counter flag is set
		while(!(SysTick->CTRL & (1 << SysTick_CTRL_COUNTFLAG_Pos))){}
 800025c:	bf00      	nop
 800025e:	4b0b      	ldr	r3, [pc, #44]	@ (800028c <delayMs+0x6c>)
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8000266:	2b00      	cmp	r3, #0
 8000268:	d0f9      	beq.n	800025e <delayMs+0x3e>
	for(int i=0; i<timeMs;i++){
 800026a:	68fb      	ldr	r3, [r7, #12]
 800026c:	3301      	adds	r3, #1
 800026e:	60fb      	str	r3, [r7, #12]
 8000270:	68fa      	ldr	r2, [r7, #12]
 8000272:	687b      	ldr	r3, [r7, #4]
 8000274:	429a      	cmp	r2, r3
 8000276:	dbf1      	blt.n	800025c <delayMs+0x3c>
	}
	SysTick->CTRL = 0;
 8000278:	4b04      	ldr	r3, [pc, #16]	@ (800028c <delayMs+0x6c>)
 800027a:	2200      	movs	r2, #0
 800027c:	601a      	str	r2, [r3, #0]
}
 800027e:	bf00      	nop
 8000280:	3714      	adds	r7, #20
 8000282:	46bd      	mov	sp, r7
 8000284:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000288:	4770      	bx	lr
 800028a:	bf00      	nop
 800028c:	e000e010 	.word	0xe000e010

08000290 <Reset_Handler>:
 8000290:	480d      	ldr	r0, [pc, #52]	@ (80002c8 <LoopForever+0x2>)
 8000292:	4685      	mov	sp, r0
 8000294:	f3af 8000 	nop.w
 8000298:	480c      	ldr	r0, [pc, #48]	@ (80002cc <LoopForever+0x6>)
 800029a:	490d      	ldr	r1, [pc, #52]	@ (80002d0 <LoopForever+0xa>)
 800029c:	4a0d      	ldr	r2, [pc, #52]	@ (80002d4 <LoopForever+0xe>)
 800029e:	2300      	movs	r3, #0
 80002a0:	e002      	b.n	80002a8 <LoopCopyDataInit>

080002a2 <CopyDataInit>:
 80002a2:	58d4      	ldr	r4, [r2, r3]
 80002a4:	50c4      	str	r4, [r0, r3]
 80002a6:	3304      	adds	r3, #4

080002a8 <LoopCopyDataInit>:
 80002a8:	18c4      	adds	r4, r0, r3
 80002aa:	428c      	cmp	r4, r1
 80002ac:	d3f9      	bcc.n	80002a2 <CopyDataInit>
 80002ae:	4a0a      	ldr	r2, [pc, #40]	@ (80002d8 <LoopForever+0x12>)
 80002b0:	4c0a      	ldr	r4, [pc, #40]	@ (80002dc <LoopForever+0x16>)
 80002b2:	2300      	movs	r3, #0
 80002b4:	e001      	b.n	80002ba <LoopFillZerobss>

080002b6 <FillZerobss>:
 80002b6:	6013      	str	r3, [r2, #0]
 80002b8:	3204      	adds	r2, #4

080002ba <LoopFillZerobss>:
 80002ba:	42a2      	cmp	r2, r4
 80002bc:	d3fb      	bcc.n	80002b6 <FillZerobss>
 80002be:	f000 f811 	bl	80002e4 <__libc_init_array>
 80002c2:	f7ff ff89 	bl	80001d8 <main>

080002c6 <LoopForever>:
 80002c6:	e7fe      	b.n	80002c6 <LoopForever>
 80002c8:	20020000 	.word	0x20020000
 80002cc:	20000000 	.word	0x20000000
 80002d0:	20000000 	.word	0x20000000
 80002d4:	0800034c 	.word	0x0800034c
 80002d8:	20000000 	.word	0x20000000
 80002dc:	2000001c 	.word	0x2000001c

080002e0 <ADC_IRQHandler>:
 80002e0:	e7fe      	b.n	80002e0 <ADC_IRQHandler>
	...

080002e4 <__libc_init_array>:
 80002e4:	b570      	push	{r4, r5, r6, lr}
 80002e6:	4d0d      	ldr	r5, [pc, #52]	@ (800031c <__libc_init_array+0x38>)
 80002e8:	4c0d      	ldr	r4, [pc, #52]	@ (8000320 <__libc_init_array+0x3c>)
 80002ea:	1b64      	subs	r4, r4, r5
 80002ec:	10a4      	asrs	r4, r4, #2
 80002ee:	2600      	movs	r6, #0
 80002f0:	42a6      	cmp	r6, r4
 80002f2:	d109      	bne.n	8000308 <__libc_init_array+0x24>
 80002f4:	4d0b      	ldr	r5, [pc, #44]	@ (8000324 <__libc_init_array+0x40>)
 80002f6:	4c0c      	ldr	r4, [pc, #48]	@ (8000328 <__libc_init_array+0x44>)
 80002f8:	f000 f818 	bl	800032c <_init>
 80002fc:	1b64      	subs	r4, r4, r5
 80002fe:	10a4      	asrs	r4, r4, #2
 8000300:	2600      	movs	r6, #0
 8000302:	42a6      	cmp	r6, r4
 8000304:	d105      	bne.n	8000312 <__libc_init_array+0x2e>
 8000306:	bd70      	pop	{r4, r5, r6, pc}
 8000308:	f855 3b04 	ldr.w	r3, [r5], #4
 800030c:	4798      	blx	r3
 800030e:	3601      	adds	r6, #1
 8000310:	e7ee      	b.n	80002f0 <__libc_init_array+0xc>
 8000312:	f855 3b04 	ldr.w	r3, [r5], #4
 8000316:	4798      	blx	r3
 8000318:	3601      	adds	r6, #1
 800031a:	e7f2      	b.n	8000302 <__libc_init_array+0x1e>
 800031c:	08000344 	.word	0x08000344
 8000320:	08000344 	.word	0x08000344
 8000324:	08000344 	.word	0x08000344
 8000328:	08000348 	.word	0x08000348

0800032c <_init>:
 800032c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800032e:	bf00      	nop
 8000330:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000332:	bc08      	pop	{r3}
 8000334:	469e      	mov	lr, r3
 8000336:	4770      	bx	lr

08000338 <_fini>:
 8000338:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800033a:	bf00      	nop
 800033c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800033e:	bc08      	pop	{r3}
 8000340:	469e      	mov	lr, r3
 8000342:	4770      	bx	lr
